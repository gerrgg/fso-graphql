{"version":3,"sources":["queries.js","components/EditAuthor.js","components/Loading.js","components/Controls.js","components/Authors.js","components/NewBook.js","components/Books.js","components/Header.js","components/LoginForm.js","components/EditUser.js","components/Recommendations.js","App.js","index.js"],"names":["gql","ALL_AUTHORS","ALL_BOOKS","CREATE_BOOK","SET_AUTHOR_BORN","LOGIN","GET_USER","EDIT_USER","RECOMMENDATIONS","useStyles","makeStyles","theme","root","padding","spacing","formControl","margin","minWidth","selectEmpty","marginTop","EditAuthor","authors","notify","start","end","classes","useState","name","setName","born","setBorn","query","useMutation","onError","error","graphQLErrors","message","update","store","response","dataInStore","readQuery","writeQuery","data","allAuthors","editAuthor","setAuthorBorn","submit","event","a","preventDefault","variables","Box","className","component","Paper","Typography","title","variant","onSubmit","display","flexDirection","FormControl","InputLabel","Select","value","required","onChange","target","map","author","i","MenuItem","key","TextField","type","label","parseInt","Button","color","size","Loading","rows","columns","Array","_","TableRow","z","TableCell","Skeleton","Controls","authorCount","paginate","children","box","disabled","startIcon","onClick","role","aria-label","endIcon","justifyContent","cell","width","Authors","show","setStart","perPage","setEnd","result","useQuery","loading","length","Grid","container","item","xs","sm","direction","TableContainer","Table","table","TableHead","align","TableBody","slice","scope","bookCount","genreButton","marginLeft","NewBook","setTitle","setAuhtor","published","setPublished","genre","setGenre","genres","setGenres","refetchQueries","addBook","createBook","Number","alignItems","FormHelperText","filter","g","removeGenre","concat","GenreFilter","setFilter","ButtonGroup","toLowerCase","textContent","Books","books","allBooks","b","includes","join","flexGrow","logoWrapper","textDecoration","logo","fontFamily","marginRight","wordWrap","button","wrapper","float","menuButton","Header","token","setToken","client","useApolloClient","AppBar","position","Toolbar","Container","maxWidth","to","IconButton","edge","MenuBookRounded","PersonOutlineRounded","FaceRounded","localStorage","clear","resetStore","ExitToAppRounded","LoginForm","history","useHistory","username","setUsername","password","setPassword","console","log","push","login","useEffect","setItem","EditUser","favoriteGenre","setFavoriteGenre","editUser","user","me","buttonControl","Recommendations","useLazyQuery","getRecommendations","recommendationResults","recommendations","createMuiTheme","palette","primary","main","secondary","Notify","errorMessage","severity","Alert","App","getItem","setErrorMessage","setSeverity","setTimeout","ThemeProvider","CssBaseline","path","exact","authLink","setContext","headers","authorization","httpLink","HttpLink","uri","ApolloClient","cache","InMemoryCache","link","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ada4849f.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const AUTHOR_COUNT = gql`\n  query {\n    authorCount\n  }\n`;\n\nexport const BOOK_COUNT = gql`\n  query {\n    bookCount\n  }\n`;\n\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      bookCount\n      born\n    }\n  }\n`;\n\nexport const ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title\n      author {\n        name\n        born\n        bookCount\n      }\n      published\n      genres\n    }\n  }\n`;\n\nexport const CREATE_BOOK = gql`\n  mutation createBook(\n    $title: String!\n    $author: String!\n    $published: Int!\n    $genres: [String!]!\n  ) {\n    addBook(\n      title: $title\n      author: $author\n      published: $published\n      genres: $genres\n    ) {\n      title\n      author {\n        name\n      }\n      published\n      genres\n    }\n  }\n`;\n\nexport const SET_AUTHOR_BORN = gql`\n  mutation setAuthorBorn($name: String!, $born: Int!) {\n    editAuthor(name: $name, born: $born) {\n      name\n      born\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;\n\nexport const GET_USER = gql`\n  query {\n    me {\n      username\n      favoriteGenre\n    }\n  }\n`;\n\nexport const EDIT_USER = gql`\n  mutation editUser($favoriteGenre: String!) {\n    editUser(favoriteGenre: $favoriteGenre) {\n      username\n      favoriteGenre\n    }\n  }\n`;\n\nexport const RECOMMENDATIONS = gql`\n  query recommendations($genre: String!) {\n    allBooks(genre: $genre) {\n      title\n      author {\n        name\n      }\n      genres\n      published\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { SET_AUTHOR_BORN, ALL_AUTHORS } from \"../queries\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  TextField,\n  InputLabel,\n  Select,\n  FormControl,\n  MenuItem,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst EditAuthor = ({ authors, start, end, notify }) => {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [born, setBorn] = useState(\"\");\n\n  const query = {\n    query: ALL_AUTHORS,\n  };\n\n  const [setAuthorBorn] = useMutation(SET_AUTHOR_BORN, {\n    onError: (error) => {\n      notify(error.graphQLErrors[0].message, \"error\");\n    },\n    update: (store, response) => {\n      const dataInStore = store.readQuery(query);\n\n      store.writeQuery({\n        ...query,\n        data: {\n          ...dataInStore,\n          allAuthors: [...dataInStore.allAuthors, response.data.editAuthor],\n        },\n      });\n    },\n  });\n\n  const submit = async (event) => {\n    event.preventDefault();\n\n    setAuthorBorn({ variables: { name, born } });\n    setName(\"\");\n    setBorn(\"\");\n  };\n\n  return (\n    <Box className={classes.root} component={Paper}>\n      <Typography className={classes.title} variant=\"h6\">\n        Edit Author\n      </Typography>\n      <form onSubmit={submit}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <FormControl className={classes.formControl}>\n            <InputLabel>Name</InputLabel>\n            <Select\n              value={name}\n              required\n              onChange={({ target }) => setName(target.value)}\n            >\n              {authors.map((author, i) => (\n                <MenuItem key={i} value={author.name}>\n                  {author.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextField\n              type=\"number\"\n              label=\"Born\"\n              value={born}\n              required\n              onChange={({ target }) => setBorn(parseInt(target.value))}\n            />\n          </FormControl>\n        </Box>\n        <FormControl className={classes.formControl}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"secondary\"\n            size=\"medium\"\n          >\n            Set birth year\n          </Button>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n\nexport default EditAuthor;\n","import React from \"react\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\n\nconst Loading = ({ rows, columns }) => {\n  return [...Array(rows)].map((_, i) => (\n    <TableRow key={i}>\n      {[...Array(columns)].map((_, z) => (\n        <TableCell key={z}>\n          <Skeleton></Skeleton>\n        </TableCell>\n      ))}\n    </TableRow>\n  ));\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { Button, Box } from \"@material-ui/core\";\n\nimport ArrowBackIosRoundedIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForward\";\n\nconst Controls = ({ classes, authorCount, start, end, paginate, children }) => (\n  <Box className={classes.box} display=\"flex\">\n    <Button\n      color=\"primary\"\n      disabled={start === 0}\n      startIcon={<ArrowBackIosRoundedIcon />}\n      onClick={() => paginate(\"prev\")}\n    >\n      Previous\n    </Button>\n    <Button>\n      {authorCount === 0 ? (\n        <span role=\"img\" aria-label=\"a robot going beep boop\">\n          Loading... 🤖\n        </span>\n      ) : (\n        `${start}-${end} of ${authorCount} Results`\n      )}\n    </Button>\n    <Button\n      color=\"primary\"\n      disabled={end > authorCount}\n      endIcon={<ArrowForwardIosRoundedIcon />}\n      onClick={() => paginate(\"next\")}\n    >\n      Next\n    </Button>\n    {children}\n  </Box>\n);\n\nexport default Controls;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_AUTHORS } from \"../queries\";\nimport EditAuthor from \"./EditAuthor\";\nimport Loading from \"./Loading\";\nimport Controls from \"./Controls\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Grid,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: `${theme.spacing(4)}px 0`,\n  },\n  box: {\n    justifyContent: \"space-between\",\n    marginTop: theme.spacing(2),\n  },\n  cell: {\n    width: \"33%\",\n  },\n}));\n\nconst Authors = ({ show, notify }) => {\n  const classes = useStyles();\n  const [start, setStart] = useState(0);\n  const [perPage] = useState(10);\n  const [end, setEnd] = useState(perPage);\n\n  const result = useQuery(ALL_AUTHORS);\n\n  const paginate = (direction) => {\n    if (direction === \"prev\") {\n      setStart(start - perPage);\n      setEnd(end - perPage);\n    } else if (direction === \"next\") {\n      setStart(start + perPage);\n      setEnd(end + perPage);\n    }\n  };\n\n  const authors = result.loading ? [] : result.data.allAuthors;\n\n  return (\n    <div>\n      <Typography className={classes.title} variant=\"h2\">\n        {authors.length === 0 ? \"Authors\" : `${authors.length} Authors`}\n      </Typography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={7}>\n          <Controls\n            classes={classes}\n            authorCount={authors.length}\n            start={start}\n            end={end}\n            paginate={paginate}\n          />\n          <TableContainer component={Paper}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell className={classes.cell}>Name</TableCell>\n                  <TableCell className={classes.cell} align=\"right\">\n                    Born\n                  </TableCell>\n                  <TableCell className={classes.cell} align=\"right\">\n                    Number of Books\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {result.loading ? (\n                  <Loading rows={10} columns={3} />\n                ) : (\n                  authors.slice(start, end).map((a) => (\n                    <TableRow key={a.name}>\n                      <TableCell\n                        className={classes.cell}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {a.name}\n                      </TableCell>\n                      <TableCell className={classes.cell} align=\"right\">\n                        {a.born}\n                      </TableCell>\n                      <TableCell className={classes.cell} align=\"right\">\n                        {a.bookCount}\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <EditAuthor\n            authors={authors}\n            start={start}\n            end={end}\n            notify={notify}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Authors;\n","import React, { useState } from \"react\";\nimport { CREATE_BOOK, ALL_BOOKS, ALL_AUTHORS } from \"../queries\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  TextField,\n  FormControl,\n  FormHelperText,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    display: \"block\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  genreButton: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst NewBook = ({ notify }) => {\n  const classes = useStyles();\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuhtor] = useState(\"\");\n  const [published, setPublished] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n\n  const [createBook] = useMutation(CREATE_BOOK, {\n    refetchQueries: [{ query: ALL_BOOKS }, { query: ALL_AUTHORS }],\n    onError: (error) => {\n      notify(error.graphQLErrors[0].message, \"error\");\n    },\n    update: (store, response) => {\n      notify(\n        `${response.data.addBook.title} by ${response.data.addBook.author.name} added!`\n      );\n    },\n  });\n\n  const submit = async (event) => {\n    event.preventDefault();\n\n    if (title && author && published && genres) {\n      createBook({ variables: { title, author, published, genres } });\n      setTitle(\"\");\n      setPublished(\"\");\n      setAuhtor(\"\");\n      setGenres([]);\n      setGenre(\"\");\n    }\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre(\"\");\n  };\n\n  const removeGenre = (genre) => {\n    setGenres(genres.filter((g) => g !== genre));\n  };\n\n  return (\n    <Box className={classes.root} component={Paper}>\n      <Typography className={classes.title} variant=\"h6\">\n        Add Book\n      </Typography>\n      <form onSubmit={submit}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            value={title}\n            label=\"Title\"\n            required\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"Author\"\n            value={author}\n            required\n            onChange={({ target }) => setAuhtor(target.value)}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"Published\"\n            type=\"number\"\n            value={published}\n            required\n            onChange={({ target }) => setPublished(Number(target.value))}\n          />\n        </FormControl>\n\n        <Box display=\"flex\" alignItems=\"center\">\n          <FormControl className={classes.formControl}>\n            <TextField\n              label=\"Genres\"\n              value={genre}\n              onChange={({ target }) => setGenre(target.value)}\n            />\n            <FormHelperText>\n              {genres.map((genre) => (\n                <Button\n                  key={genre}\n                  endIcon={<CloseIcon />}\n                  onClick={() => removeGenre(genre)}\n                >\n                  {genre}\n                </Button>\n              ))}\n            </FormHelperText>\n          </FormControl>\n          <Button\n            className={classes.genreButton}\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={addGenre}\n          >\n            Add Genre\n          </Button>\n        </Box>\n\n        <FormControl className={classes.formControl}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            Create Book\n          </Button>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n\nexport default NewBook;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Controls from \"./Controls\";\nimport Loading from \"./Loading\";\nimport { ALL_BOOKS } from \"../queries\";\nimport NewBook from \"../components/NewBook\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  ButtonGroup,\n  Button,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Grid,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: `${theme.spacing(4)}px 0`,\n  },\n  box: {\n    justifyContent: \"space-between\",\n    marginTop: theme.spacing(2),\n  },\n  cell: {\n    width: \"25%\",\n  },\n  filter: {\n    margin: `${theme.spacing(2)}px auto`,\n  },\n}));\n\nconst Books = ({ notify }) => {\n  const classes = useStyles();\n  const [start, setStart] = useState(0);\n  const [perPage] = useState(10);\n  const [end, setEnd] = useState(perPage);\n  const [filter, setFilter] = useState(\"\");\n  const result = useQuery(ALL_BOOKS);\n\n  const paginate = (direction) => {\n    if (direction === \"prev\") {\n      setStart(start - perPage);\n      setEnd(end - perPage);\n    } else if (direction === \"next\") {\n      setStart(start + perPage);\n      setEnd(end + perPage);\n    }\n  };\n\n  const filterBooks = (genre) => {\n    setFilter(genre.toLowerCase());\n    setStart(0);\n    setEnd(10);\n  };\n\n  let books = result.loading ? [] : result.data.allBooks;\n\n  if (filter) {\n    books = books.filter((b) => b.genres.includes(filter));\n  }\n\n  return (\n    <div>\n      <Typography className={classes.title} variant=\"h2\">\n        {books.length === 0\n          ? \"Books\"\n          : `${books.length} books ${filter ? ` in \"${filter}\"` : \"\"}`}\n      </Typography>\n\n      <GenreFilter classes={classes} setFilter={filterBooks} filter={filter} />\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={7}>\n          <TableContainer component={Paper}>\n            <Controls\n              classes={classes}\n              authorCount={books.length}\n              start={start}\n              end={end}\n              paginate={paginate}\n            />\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell className={classes.cell}>Title</TableCell>\n                  <TableCell className={classes.cell} align=\"right\">\n                    Author\n                  </TableCell>\n                  <TableCell className={classes.cell} align=\"right\">\n                    Genres\n                  </TableCell>\n                  <TableCell className={classes.cell} align=\"right\">\n                    Published\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {result.loading ? (\n                  <Loading rows={10} columns={4} />\n                ) : (\n                  books.slice(start, end).map((b) => (\n                    <TableRow key={b.title}>\n                      <TableCell\n                        className={classes.cell}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {b.title}\n                      </TableCell>\n                      <TableCell className={classes.cell} align=\"right\">{`${\n                        b.author ? b.author.name : \"Anonymous\"\n                      }`}</TableCell>\n                      <TableCell className={classes.cell} align=\"right\">\n                        {b.genres.join(\", \")}\n                      </TableCell>\n                      <TableCell className={classes.cell} align=\"right\">\n                        {b.published}\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <NewBook notify={notify} start={start} end={end} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst GenreFilter = ({ setFilter, filter, classes }) => {\n  const handleClick = (genre) => {\n    setFilter(genre.toLowerCase());\n  };\n\n  const genres = [\n    \"Crime\",\n    \"Horror\",\n    \"Teen\",\n    \"Database\",\n    \"Classic\",\n    \"Refactoring\",\n  ];\n\n  return (\n    <ButtonGroup\n      color=\"primary\"\n      aria-label=\"outlined primary button group\"\n      className={classes.filter}\n    >\n      {genres.map((g) => (\n        <Button\n          variant={g.toLowerCase() === filter ? \"contained\" : null}\n          onClick={({ target }) => handleClick(target.textContent)}\n        >\n          {g}\n        </Button>\n      ))}\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        disabled={filter === \"\"}\n        endIcon={<ClearIcon />}\n        onClick={() => setFilter(\"\")}\n      >\n        Clear\n      </Button>\n    </ButtonGroup>\n  );\n};\n\nexport default Books;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  Container,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\n\nimport {\n  PersonOutlineRounded,\n  MenuBookRounded,\n  ExitToAppRounded,\n  FaceRounded,\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  logoWrapper: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n  logo: {\n    fontFamily: \"'Rock Salt', cursive\",\n    display: \"inline\",\n    marginRight: theme.spacing(2),\n    wordWrap: \"none\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  wrapper: {\n    float: \"right\",\n  },\n  menuButton: {\n    color: \"inherit\",\n  },\n}));\n\nexport default function Header({ token, setToken }) {\n  const classes = useStyles();\n  const client = useApolloClient();\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Container className={classes.container} maxWidth=\"md\">\n            <Link to=\"/\" className={classes.logoWrapper}>\n              <Typography className={classes.logo} variant=\"h6\">\n                <span role=\"img\" aria-label=\"pile of books\">\n                  📚\n                </span>{\" \"}\n                Library{\" \"}\n                <span role=\"img\" aria-label=\"pile of books\">\n                  📚\n                </span>\n              </Typography>\n            </Link>\n            <div className={classes.wrapper}>\n              <Link to=\"/books\" className={classes.menuButton}>\n                <IconButton\n                  className={classes.button}\n                  edge=\"start\"\n                  color=\"inherit\"\n                >\n                  <MenuBookRounded />\n                </IconButton>\n              </Link>\n              <Link to=\"/authors\" className={classes.menuButton}>\n                <IconButton className={classes.button} edge=\"\" color=\"inherit\">\n                  <PersonOutlineRounded />\n                </IconButton>\n              </Link>\n\n              {token ? (\n                <>\n                  <Link to=\"/user\" className={classes.menuButton}>\n                    <IconButton\n                      edge=\"\"\n                      className={classes.button}\n                      color=\"inherit\"\n                    >\n                      <FaceRounded />\n                    </IconButton>\n                  </Link>\n                  <IconButton\n                    edge=\"end\"\n                    className={classes.button}\n                    color=\"inherit\"\n                    onClick={() => logout()}\n                  >\n                    <ExitToAppRounded />\n                  </IconButton>\n                </>\n              ) : null}\n            </div>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../queries\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  TextField,\n  FormControl,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: `${theme.spacing(2)}px auto`,\n    padding: theme.spacing(2),\n    maxWidth: 400,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst LoginForm = ({ notify, setToken }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [username, setUsername] = useState(\"greg\");\n  const [password, setPassword] = useState(\"secred\");\n\n  const [login, result] = useMutation(LOGIN, {\n    onError: (error) => {\n      console.log(error);\n      notify(error.graphQLErrors[0].message, \"error\");\n    },\n    update: (store, response) => {\n      notify(\"Login successful!\");\n      history.push(\"/\");\n    },\n  });\n\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value;\n      setToken(token);\n      localStorage.setItem(\"library-user-token\", token);\n    }\n  }, [result.data, setToken]);\n\n  const submit = async (event) => {\n    event.preventDefault();\n    login({ variables: { username, password } });\n  };\n\n  return (\n    <Box className={classes.root} component={Paper}>\n      <Typography className={classes.title} variant=\"h2\">\n        Login\n      </Typography>\n      <form onSubmit={submit}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <FormControl className={classes.formControl}>\n            <TextField\n              label=\"Username\"\n              value={username}\n              required\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextField\n              type=\"password\"\n              label=\"Password\"\n              value={password}\n              required\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </FormControl>\n        </Box>\n        <FormControl className={classes.formControl}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"secondary\"\n            size=\"large\"\n          >\n            Login\n          </Button>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { EDIT_USER, GET_USER } from \"../queries\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {\n  Box,\n  TextField,\n  FormControl,\n  Button,\n  Typography,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: `${theme.spacing(2)}px auto`,\n    padding: theme.spacing(2),\n    maxWidth: 400,\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  loading: {\n    width: \"100%\",\n  },\n}));\n\nconst EditUser = ({ notify }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [favoriteGenre, setFavoriteGenre] = useState(\"\");\n\n  const result = useQuery(GET_USER);\n\n  const [editUser] = useMutation(EDIT_USER, {\n    refetchQueries: [{ query: GET_USER }],\n    onError: (error) => {\n      console.log(error);\n      notify(error.graphQLErrors[0].message, \"error\");\n    },\n    update: () => {\n      notify(\"Update successful!\");\n      history.push(\"/\");\n    },\n  });\n\n  const user = result.loading ? null : result.data.me;\n\n  useEffect(() => {\n    if (user && user.favoriteGenre) {\n      setFavoriteGenre(user.favoriteGenre);\n    }\n  }, [user]);\n\n  const submit = async (event) => {\n    event.preventDefault();\n    if (favoriteGenre) {\n      editUser({ variables: { favoriteGenre } });\n    }\n  };\n\n  return (\n    <Box className={classes.root} component={Paper}>\n      {!user ? (\n        <p>\n          <Skeleton />\n          <Skeleton />\n          <Skeleton />\n        </p>\n      ) : (\n        <>\n          <Typography className={classes.title} variant=\"h4\">\n            Edit User\n          </Typography>\n          <form onSubmit={submit}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <FormControl className={classes.formControl}>\n                <TextField label=\"Username\" disabled value={user.username} />\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <TextField\n                  label=\"Favorite Genre\"\n                  value={favoriteGenre}\n                  onChange={({ target }) => setFavoriteGenre(target.value)}\n                />\n                <FormHelperText>\n                  We use this to offer personalized book{\" \"}\n                  <Link to=\"/recommendations\">recommendations</Link>.\n                </FormHelperText>\n              </FormControl>\n            </Box>\n            <FormControl className={classes.formControl}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"secondary\"\n                startIcon={<CheckCircleIcon />}\n                size=\"large\"\n              >\n                Save Changes\n              </Button>\n            </FormControl>\n          </form>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default EditUser;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\nimport { RECOMMENDATIONS, GET_USER } from \"../queries\";\nimport Loading from \"./Loading\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  Button,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Grid,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: `${theme.spacing(4)}px 0`,\n  },\n  box: {\n    justifyContent: \"space-between\",\n    marginTop: theme.spacing(2),\n  },\n  cell: {\n    width: \"25%\",\n  },\n  filter: {\n    margin: `${theme.spacing(2)}px auto`,\n  },\n  buttonControl: {\n    justifyContent: \"space-between\",\n    margin: `${theme.spacing(2)}px 0`,\n  },\n}));\n\nconst Recommendations = ({ notify }) => {\n  const classes = useStyles();\n\n  const result = useQuery(GET_USER);\n  const [getRecommendations, recommendationResults] = useLazyQuery(\n    RECOMMENDATIONS\n  );\n\n  const user = result.loading ? null : result.data.me;\n\n  useEffect(() => {\n    if (user && user.favoriteGenre) {\n      getRecommendations({ variables: { genre: user.favoriteGenre } });\n    }\n  }, [user, getRecommendations]);\n\n  const recommendations = recommendationResults.data\n    ? recommendationResults.data.allBooks\n    : [];\n\n  return (\n    <div>\n      <Typography className={classes.title} variant=\"h3\">\n        {recommendations.length === 0\n          ? \"Recommendations\"\n          : `${recommendations.length} recommended books ${\n              user ? ` in \"${user.favoriteGenre}\"` : \"\"\n            }`}\n      </Typography>\n\n      <Box display=\"flex\" alignItems=\"center\" className={classes.buttonControl}>\n        <Link to=\"/user\">\n          <Button>Change favorite genre</Button>\n        </Link>\n\n        <Link to=\"/\">\n          <Button variant=\"contained\" color=\"primary\">\n            All Books\n          </Button>\n        </Link>\n      </Box>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell className={classes.cell}>Title</TableCell>\n                  <TableCell className={classes.cell} align=\"right\">\n                    Author\n                  </TableCell>\n                  <TableCell className={classes.cell} align=\"right\">\n                    Genres\n                  </TableCell>\n                  <TableCell className={classes.cell} align=\"right\">\n                    Published\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!recommendations.length ? (\n                  <Loading rows={10} columns={4} />\n                ) : (\n                  recommendations.map((b) => (\n                    <TableRow key={b.title}>\n                      <TableCell\n                        className={classes.cell}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {b.title}\n                      </TableCell>\n                      <TableCell className={classes.cell} align=\"right\">{`${\n                        b.author ? b.author.name : \"Anonymous\"\n                      }`}</TableCell>\n                      <TableCell className={classes.cell} align=\"right\">\n                        {b.genres.join(\", \")}\n                      </TableCell>\n                      <TableCell className={classes.cell} align=\"right\">\n                        {b.published}\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Recommendations;\n","import React, { useState } from \"react\";\n\n// ROUTER\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// MATERIAL-UI\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\n\n// COMPONENTS\nimport Authors from \"./components/Authors\";\nimport Books from \"./components/Books\";\nimport Header from \"./components/Header\";\nimport LoginForm from \"./components/LoginForm\";\nimport EditUser from \"./components/EditUser\";\nimport Recommendations from \"./components/Recommendations\";\n\n// THEME\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#263238\",\n    },\n    secondary: {\n      main: \"#EF5350\",\n    },\n  },\n});\n\n//STYLES\nconst useStyles = makeStyles((theme) => ({\n  notify: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst App = () => {\n  // get token or set to null\n  const [token, setToken] = useState(\n    localStorage.getItem(\"library-user-token\")\n      ? localStorage.getItem(\"library-user-token\")\n      : null\n  );\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [severity, setSeverity] = useState(null);\n\n  const notify = (message, severity) => {\n    setErrorMessage(message);\n    setSeverity(severity);\n\n    setTimeout(() => {\n      setErrorMessage(null);\n      setSeverity(null);\n    }, 5000);\n  };\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Header token={token} setToken={setToken} />\n        <Container maxWidth=\"md\">\n          <Notify errorMessage={errorMessage} severity={severity} />\n          {!token ? (\n            <LoginForm notify={notify} setToken={setToken} />\n          ) : (\n            <Switch>\n              <Route path=\"/authors\">\n                <Authors notify={notify} />\n              </Route>\n              <Route path=\"/user\">\n                <EditUser notify={notify} />\n              </Route>\n              <Route path=\"/books\">\n                <Books notify={notify} />\n              </Route>\n              <Route exact path=\"/\">\n                <Recommendations notify={notify} />\n              </Route>\n            </Switch>\n          )}\n        </Container>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nconst Notify = ({ errorMessage, severity }) => {\n  const classes = useStyles();\n\n  severity = severity ? severity : \"success\";\n\n  if (!errorMessage) {\n    return null;\n  }\n  return (\n    <Alert className={classes.notify} severity={severity}>\n      {errorMessage}\n    </Alert>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\n\nimport { setContext } from \"apollo-link-context\";\n\nconst authLink = setContext((_, { headers }) => {\n  // get token from local storage\n  const token = localStorage.getItem(\"library-user-token\");\n\n  // add it to request headers for authorization\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    },\n  };\n});\n\nconst httpLink = new HttpLink({ uri: \"http://localhost:4000/api\" });\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}